# ASP.NET Core
# Build and test ASP.NET Core web applications targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/vsts/pipelines/languages/dotnet-core

pool:
  vmImage: 'vs2017-win2016'
trigger:
  - master

variables:
  buildConfiguration: 'Release'
  restoreBuildProjects: '**/*.csproj'
  testProjects: '**/tests/*.Tests/*.csproj'
  # publishProject: '**/src/Opw.Website.Host/*.csproj'

steps:
- task: gittools.gitversion.gitversion-task.GitVersion@3
  displayName: GitVersion
  inputs:
    updateAssemblyInfo: true

- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: restore
    projects: $(restoreBuildProjects)

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    projects: $(restoreBuildProjects)
    arguments: '--configuration $(buildConfiguration) /p:Version=$(Build.BuildNumber)'

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: test
    projects: $(testProjects)
    arguments: '--configuration $(buildConfiguration) --filter Category!=IntegrationTest --no-build'

- task: DotNetCoreCLI@2
  displayName: NuGet Pack Opw.HttpExceptions
  inputs:
    command: pack
    packagesToPack: '**/Opw.HttpExceptions.csproj'
    versioningScheme: byBuildNumber

- task: DotNetCoreCLI@2
  displayName: NuGet Pack Opw.HttpExceptions.AspNetCore
  inputs:
    command: pack
    packagesToPack: '**/Opw.HttpExceptions.AspNetCore.csproj'
    versioningScheme: byBuildNumber

- task: NuGetCommand@2
  displayName: NuGet Push
  inputs:
    command: push
    nuGetFeedType: external
    publishFeedCredentials: NuGet
    versioningScheme: byBuildNumber

- task: GithubRelease@0
  displayName: Create GitHub Release
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  inputs:
   gitHubConnection: GitHub
   repositoryName: $(Build.Repository.Name)
   action: create
   tagSource: manual
   tag: $(Build.BuildNumber)

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  condition: always()
  inputs:
    PathtoPublish: $(build.artifactstagingdirectory)